//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace com.kartris.livetile
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KartrisNotificationData", Namespace="http://schemas.datacontract.org/2004/07/KartrisNotificationServer")]
    public partial class KartrisNotificationData : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private string ClientWindowsStoreAppChannelURIField;
        
        private string KartrisWebShopURLField;
        
        private long NotificationDataCountField;
        
        private string NotificationDataTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientWindowsStoreAppChannelURI
        {
            get
            {
                return this.ClientWindowsStoreAppChannelURIField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ClientWindowsStoreAppChannelURIField, value) != true))
                {
                    this.ClientWindowsStoreAppChannelURIField = value;
                    this.RaisePropertyChanged("ClientWindowsStoreAppChannelURI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KartrisWebShopURL
        {
            get
            {
                return this.KartrisWebShopURLField;
            }
            set
            {
                if ((object.ReferenceEquals(this.KartrisWebShopURLField, value) != true))
                {
                    this.KartrisWebShopURLField = value;
                    this.RaisePropertyChanged("KartrisWebShopURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long NotificationDataCount
        {
            get
            {
                return this.NotificationDataCountField;
            }
            set
            {
                if ((this.NotificationDataCountField.Equals(value) != true))
                {
                    this.NotificationDataCountField = value;
                    this.RaisePropertyChanged("NotificationDataCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NotificationDataType
        {
            get
            {
                return this.NotificationDataTypeField;
            }
            set
            {
                if ((object.ReferenceEquals(this.NotificationDataTypeField, value) != true))
                {
                    this.NotificationDataTypeField = value;
                    this.RaisePropertyChanged("NotificationDataType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="com.kartris.livetile.KartrisNotificationServerSvc")]
    public interface KartrisNotificationServerSvc
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/KartrisNotificationServerSvc/SendNotification", ReplyAction="http://tempuri.org/KartrisNotificationServerSvc/SendNotificationResponse")]
        System.Threading.Tasks.Task<string> SendNotificationAsync(com.kartris.livetile.KartrisNotificationData KartrisNotificationData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/KartrisNotificationServerSvc/UpdateURIandGetData", ReplyAction="http://tempuri.org/KartrisNotificationServerSvc/UpdateURIandGetDataResponse")]
        System.Threading.Tasks.Task<string> UpdateURIandGetDataAsync(string strDeviceID, string strPushNotificationsURI);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/KartrisNotificationServerSvc/RegisterDevice", ReplyAction="http://tempuri.org/KartrisNotificationServerSvc/RegisterDeviceResponse")]
        System.Threading.Tasks.Task<string> RegisterDeviceAsync(string strPushNotificationsURI, string strPlatform);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public interface KartrisNotificationServerSvcChannel : com.kartris.livetile.KartrisNotificationServerSvc, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public partial class KartrisNotificationServerSvcClient : System.ServiceModel.ClientBase<com.kartris.livetile.KartrisNotificationServerSvc>, com.kartris.livetile.KartrisNotificationServerSvc
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public KartrisNotificationServerSvcClient() : 
                base(KartrisNotificationServerSvcClient.GetDefaultBinding(), KartrisNotificationServerSvcClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_KartrisNotificationServerSvc.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public KartrisNotificationServerSvcClient(EndpointConfiguration endpointConfiguration) : 
                base(KartrisNotificationServerSvcClient.GetBindingForEndpoint(endpointConfiguration), KartrisNotificationServerSvcClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public KartrisNotificationServerSvcClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(KartrisNotificationServerSvcClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public KartrisNotificationServerSvcClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(KartrisNotificationServerSvcClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public KartrisNotificationServerSvcClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<string> SendNotificationAsync(com.kartris.livetile.KartrisNotificationData KartrisNotificationData)
        {
            return base.Channel.SendNotificationAsync(KartrisNotificationData);
        }
        
        public System.Threading.Tasks.Task<string> UpdateURIandGetDataAsync(string strDeviceID, string strPushNotificationsURI)
        {
            return base.Channel.UpdateURIandGetDataAsync(strDeviceID, strPushNotificationsURI);
        }
        
        public System.Threading.Tasks.Task<string> RegisterDeviceAsync(string strPushNotificationsURI, string strPlatform)
        {
            return base.Channel.RegisterDeviceAsync(strPushNotificationsURI, strPlatform);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_KartrisNotificationServerSvc))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_KartrisNotificationServerSvc))
            {
                return new System.ServiceModel.EndpointAddress("http://livetile.kartris.com/KartrisNotificationServer.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return KartrisNotificationServerSvcClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_KartrisNotificationServerSvc);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return KartrisNotificationServerSvcClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_KartrisNotificationServerSvc);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_KartrisNotificationServerSvc,
        }
    }
}
